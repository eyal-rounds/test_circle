import java.nio.charset.StandardCharsets

String buildedBranch = System.getenv('CIRCLE_BRANCH');
String branchToUseCounter = System.getenv('BRANCH_WITH_COUNTER') == null ? "" :
    System.getenv('BRANCH_WITH_COUNTER');
buildedBranch = buildedBranch == null ? "" : buildedBranch;
boolean isCircleCI = "true".equals(System.getenv('CIRCLECI'));
boolean isUseCounterOnCI = isCircleCI && buildedBranch.equals(branchToUseCounter);
boolean isMasterOnCircleCi = isCircleCI && buildedBranch.equals("master");
println("is circleci ? ${isCircleCI} , is use counter on ci ? ${isUseCounterOnCI}, is on masterci ? ${isMasterOnCircleCi}")

// only if it's circleci build (not local) and if we are on develop do we need to
// change the version name.
if( isUseCounterOnCI ){
    project.afterEvaluate({
        addCounterToVersionName();
    });
}

if( isMasterOnCircleCi ){
    //leave empty at the moment, i'm not sure where i'll take the revision from.
}

/**
 * add the version count from circleci cache to the android.defaultConfig.versionName.
 */
void addCounterToVersionName(){
    String count = readBuildCount();
    count = (count == null || count.length() == 0) ? "0" : count;
    String origVerName = android.defaultConfig.versionName;
    android.defaultConfig.versionName = origVerName + "_" + count;
    println("\nnew verrsion name is : ${android.defaultConfig.versionName}");
}

/**
 * read the build counter from circleci home dir:
 * ~/.rounds_cache/build_count, it's a text file
 * trim it in the end to avoid \n in our text.
 * @return the build count string or empty string if failed.
 */
String readBuildCount(){
    String count = "";
    String homeDir = "$System.env.HOME"
    if( homeDir != null && homeDir.length() != 0){
        File buildCountFile = new File(homeDir, ".rounds_cache/build_count")
        if( buildCountFile.exists() && buildCountFile.canRead() ){
            try{
                FileInputStream fis = new FileInputStream(buildCountFile);
                byte[] buff = new byte[6];
                int read = fis.read(buff);
                count = new String(buff, 0, read, StandardCharsets.US_ASCII).trim();
            }catch(Exception e){
                e.printStackTrace();
            }
        }
    }
    return count;
}
